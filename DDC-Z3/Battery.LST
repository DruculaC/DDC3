C51 COMPILER V9.51   BATTERY                                                               05/08/2014 09:49:59 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE BATTERY
OBJECT MODULE PLACED IN Battery.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE Battery.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*---------------------------------------------------
   2                  Battery.c (v1.00)
   3                  
   4                  µç³ØµçÁ¿ÅÐ¶Ï
   5          ---------------------------------------------------*/   
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "Battery.h"
  11          #include "voice.h"
  12          #include "Delay.h"
  13          
  14          /*------ public variable -----------------------------------*/
  15          extern tByte key_rotated_on_flag;
  16          
  17          /*----------------------------------------------------
  18                  verifybattery()
  19                  voice alarm for battery status
  20          -----------------------------------------------------*/
  21          
  22          void verifybattery(tWord Check2)
  23                  {       
  24   1              // battery is sufficient, battery > 51.2V, 3.53V/4.95V
  25   1      //      if((Check2 >= 0x326))
  26   1              if((Check2 >= 0x2da))
  27   1                      {
  28   2                      voice_EN = 1;
  29   2                      SC_Speech(28);          
  30   2                      Delay(50);
  31   2                      voice_EN = 0;
  32   2                      }
  33   1         // 20km, 50.1V < battery < 51.2, 3.47V/4.95V
  34   1      //      else if((Check2 < 0x322)&&(Check2 >= 0x30c))            
  35   1              else if((Check2 < 0x2da)&&(Check2 >= 0x2cd))            
  36   1                      {
  37   2                      voice_EN = 1;
  38   2                      SC_Speech(10);  
  39   2                      Delay(80);
  40   2                      voice_EN = 0;
  41   2                      }
  42   1              // 15km, 49V < battery < 50.1V, 3.42V/4.95V 
  43   1      //      else if((Check2 < 0x309)&&(Check2 >= 0x2f3))            
  44   1              else if((Check2 < 0x2cd)&&(Check2 >= 0x2c3))            
  45   1                      {
  46   2                      voice_EN = 1;
  47   2                      SC_Speech(9);   
  48   2                      Delay(80);
  49   2                      voice_EN = 0;
  50   2                      }
  51   1              // 10km, 48V < battery <49V, 3.36V/4.95V
  52   1      //      else if((Check2 < 0x3f0)&&(Check2 >= 0x2da))            
  53   1              else if((Check2 < 0x2c3)&&(Check2 >= 0x2b7))            
  54   1                      {
  55   2                      voice_EN = 1;
C51 COMPILER V9.51   BATTERY                                                               05/08/2014 09:49:59 PAGE 2   

  56   2                      SC_Speech(8);   
  57   2                      Delay(80);
  58   2                      voice_EN = 0;
  59   2                      }
  60   1              // 5km, 47V < battery < 48V, 3.31V/4.95V
  61   1      //      else if((Check2 < 0x2d7)&&(Check2 >= 0x2c0))            
  62   1              else if((Check2 < 0x2b7)&&(Check2 >= 0x2ac))            
  63   1                      {
  64   2                      voice_EN =1;
  65   2                      SC_Speech(7);   
  66   2                      Delay(80);
  67   2                      voice_EN = 0;
  68   2                      }
  69   1              // battery is low, battery < 47V
  70   1      //      else if(Check2 < 0x2bd)
  71   1              else if(Check2 < 0x2ac)
  72   1                      {
  73   2                      motorBAT_low_speech();
  74   2                      }
  75   1              }
  76          
  77          /*---------------------------------------------------
  78                  end of file
  79          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    180    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
