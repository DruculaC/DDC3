C51 COMPILER V9.51   COMMUNICATION                                                         04/17/2014 15:30:01 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE COMMUNICATION
OBJECT MODULE PLACED IN communication.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE communication.c BROWSE DEBUG OBJECTEXTEND TABS(3)

line level    source

   1          /*---------------------------------------------------
   2             communication.c (v1.00)
   3             
   4             Í¨ĞÅ³ÌĞò
   5          ---------------------------------------------------*/ 
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "communication.h"
  11          #include "Delay.h"
  12          
  13          /*-------------------------------------------------*/
  14          tByte myTxRxData[7]={0x00,0x00,0x00,0x00,0x00,0x00,0x00};
  15          
  16          extern tByte receive_LV_count;      //Ã¿´Îtimer1Òç³öÊ±ÅĞ¶Ï½ÓÊÕÏßÈç¹ûÎªLV£¬Ôò¼ÆÊı¼Ó1£¬ÒÔ´ËÀ´±íÃ÷µÍµçÆ½µÄÊ±¼ä
  17          extern bit receive_wire_flag;    //½ÓÊÕÍ¨ĞÅÏßµÄ±êÖ¾Î»£¬1±íÃ÷¸ßµçÆ½£¬0±íÃ÷µÍµçÆ½£¬Ã¿´Îtimer1Òç³öÊ±£¬ÅĞ¶ÏP1.1Ò
             -»´Î¡£ÒÔ´ËÀ´±íÃ÷ÊÇ·ñÎªÒ»´ÎÕıÈ·µÄÏÂ½µÑØ
  18          extern tByte one_receive_byte;      //½ÓÊÕÊı¾İµÄÒ»¸ö×Ö½Ú£¬½ÓÊÕÍêºó½«Æä¸³Öµ¸øreceived_data_bufferÏà¶ÔÓ¦µÄ×Ö½Ú
  19          extern tByte one_receive_byte_count;         //one_receive_byteÓĞ8Î»£¬´Ë¼ÆÊı±íÃ÷½ÓÊÕµ½µÚ¼¸Î»£¬Ã¿´Î¼ÆÊıµ½8µÄÊ±ºò±
             -íÃ÷Ò»¸ö×Ö½Ú½ÓÊÕÍê³É¡£
  20          extern tByte receive_HV_count;      //¶¨Ê±Æ÷T1ÔÚÃ»ÓĞĞÅºÅµ½À´µÄÊ±ºò£¬¶Ô¸ßµçÆ½¼ÆÊı£¬Ò»µ©³¬¹ıÄ³¸öÖµ£¬Ôò½«one_rece
             -ive_byte_countÇå0
  21          extern tByte data_count;            //½ÓÊÕÊı¾İ»º´æµÄÎ»Êı£¬¼´±íÃ÷µÚ¼¸¸ö»º´æÊı¾İ
  22          extern tByte received_data_buffer[7];     //½ÓÊÕÊı¾İ»º´æ
  23          extern bit receive_data_finished_flag;    //½ÓÊÕÕâÒ»´®Êı¾İÍê³Éºó£¬´Ë±êÖ¾Î»ÖÃ1
  24          
  25          /*----------------------------------------------------
  26             initsignal()
  27             
  28             ³õÊ¼»¯ĞÅºÅ³ÌĞò£¬½ÓÊÕ»úÔÚ½Ó½ÓÊÕĞÅºÅµÄÊ±ºò£¬ĞèÒªÓĞ
  29             Ò»¶Î´úÂëÀ´Ê¹½ÓÊÕ»ú´ò¿ª£¬¶øÕâÒ»¶Î³ÌĞòÓĞ¿ÉÄÜÎŞ·¨Ê¶±ğ
  30             ³öÀ´£¬¶øÊÇÏàµ±ÓÚ·Ï´úÂë£¬Ö»Õ¼ÓÃÍ¨ĞÅÊ±¼ä¡£
  31          ----------------------------------------------------*/
  32          
  33          void initsignal()
  34          {
  35   1         unsigned char k,k1;
  36   1         unsigned char mystartbuffer=0xaa;
  37   1         for(k1=0;k1<3;k1++)
  38   1         {
  39   2            for(k=0;k<8;k++)
  40   2            {
  41   3               if((mystartbuffer&0x80)==0x80)//Îª1
  42   3               {
  43   4                  P10=0;
  44   4                  Delay3(80);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
  45   4               }
  46   3               else//Îª0µÄÇé¿ö
  47   3               {
  48   4                  P10=0;
  49   4                  Delay3(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
  50   4               }
  51   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
  52   3               mystartbuffer<<=1;
C51 COMPILER V9.51   COMMUNICATION                                                         04/17/2014 15:30:01 PAGE 2   

  53   3               Delay3(150);//ÑÓÊ±Òª´óÓÚ2ms
  54   3            }
  55   2            mystartbuffer=0xaa;
  56   2            Delay3(80);
  57   2         }
  58   1         P10=1;
  59   1      }
  60          
  61          /*----------------------------------------------------
  62             initsignal2()
  63             
  64             ³õÊ¼»¯ĞÅºÅ³ÌĞò£¬½ÓÊÕ»úÔÚ½Ó½ÓÊÕĞÅºÅµÄÊ±ºò£¬ĞèÒªÓĞ
  65             Ò»¶Î´úÂëÀ´Ê¹½ÓÊÕ»ú´ò¿ª£¬¶øÕâÒ»¶Î³ÌĞòÓĞ¿ÉÄÜÎŞ·¨Ê¶±ğ
  66             ³öÀ´£¬¶øÊÇÏàµ±ÓÚ·Ï´úÂë£¬Ö»Õ¼ÓÃÍ¨ĞÅÊ±¼ä¡£
  67          ----------------------------------------------------*/
  68          
  69          void initsignal2()
  70          {
  71   1         unsigned char k,k1;
  72   1         unsigned char mystartbuffer=0xaa;
  73   1         for(k1=0;k1<3;k1++)
  74   1         {
  75   2            for(k=0;k<8;k++)
  76   2            {
  77   3               if((mystartbuffer&0x80)==0x80)//Îª1
  78   3               {
  79   4                  P10=0;
  80   4                  Delay3(80);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
  81   4               }
  82   3               else//Îª0µÄÇé¿ö
  83   3               {
  84   4                  P10=0;
  85   4                  Delay3(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
  86   4               }
  87   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
  88   3               mystartbuffer<<=1;
  89   3               Delay3(150);//ÑÓÊ±Òª´óÓÚ2ms
  90   3            }
  91   2            mystartbuffer=0xaa;
  92   2            Delay3(80);
  93   2         }
  94   1         P10=1;
  95   1      }
  96          
  97          /*----------------------------------------------------
  98             initsignal3()
  99             
 100             ³õÊ¼»¯ĞÅºÅ³ÌĞò£¬½ÓÊÕ»úÔÚ½Ó½ÓÊÕĞÅºÅµÄÊ±ºò£¬ĞèÒªÓĞ
 101             Ò»¶Î´úÂëÀ´Ê¹½ÓÊÕ»ú´ò¿ª£¬¶øÕâÒ»¶Î³ÌĞòÓĞ¿ÉÄÜÎŞ·¨Ê¶±ğ
 102             ³öÀ´£¬¶øÊÇÏàµ±ÓÚ·Ï´úÂë£¬Ö»Õ¼ÓÃÍ¨ĞÅÊ±¼ä¡£
 103          ----------------------------------------------------*/
 104          
 105          void initsignal3()
 106          {
 107   1         unsigned char k,k1;
 108   1         unsigned char mystartbuffer=0xaa;
 109   1         for(k1=0;k1<3;k1++)
 110   1         {
 111   2            for(k=0;k<8;k++)
 112   2            {
 113   3               if((mystartbuffer&0x80)==0x80)//Îª1
 114   3               {
C51 COMPILER V9.51   COMMUNICATION                                                         04/17/2014 15:30:01 PAGE 3   

 115   4                  P10=0;
 116   4                  Delay3(80); //ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 117   4               }
 118   3               else
 119   3               {
 120   4                  P10=0;
 121   4                  Delay3(80); //ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 122   4               }
 123   3               P10=1;
 124   3               mystartbuffer<<=1;
 125   3               Delay3(150);//ÑÓÊ±Òª´óÓÚ2ms
 126   3            }
 127   2            mystartbuffer=0xaa;
 128   2            Delay3(80);
 129   2         }
 130   1         P10=1;
 131   1      }
 132          
 133          /*------------------------------------------------------------------------
 134             
 135          
 136          /*--------------------------------------------------
 137             ComMode_1_Data()
 138             
 139             Ö÷»ú½ÓÊÕµ½±àÂë1ĞÅºÅºó£¬»á·´À¡Ò»¸ö±àÂë1ĞÅºÅ¸ø¸½»ú
 140             ÒÔ±íÊ¾Ö÷»úÔÚ¸½»ú¸½½ü¡£
 141          ---------------------------------------------------*/
 142          
 143          void ComMode_1_Data()   
 144          {
 145   1         unsigned char i,n;
 146   1         receiver_EN = 1;
 147   1         transmiter_power = 1;            
 148   1         transmiter_EN = 0;
 149   1         myTxRxData[0]=CmdHead;
 150   1         myTxRxData[1]=MyAddress;
 151   1         myTxRxData[2]=ComMode_1;
 152   1      /* myTxRxData[3]=0x00;
 153   1         myTxRxData[4]=0x00;
 154   1         myTxRxData[5]=0x00;
 155   1         myTxRxData[6]=0x00;
 156   1      */
 157   1         initsignal2();
 158   1      
 159   1         for(i=0;i<3;i++)
 160   1         {
 161   2            for(n=0;n<8;n++)
 162   2            {
 163   3               if((myTxRxData[i]&0x80)==0x80)//Îª1
 164   3               {
 165   4                  P10=0;
 166   4                  Delay4(120);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 167   4               }
 168   3               else//Îª0µÄÇé¿ö
 169   3               {
 170   4                  P10=0;
 171   4                  Delay4(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 172   4               }
 173   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
 174   3               myTxRxData[i]<<=1;
 175   3               Delay4(50);//ÑÓÊ±Òª´óÓÚ2ms
 176   3            }
C51 COMPILER V9.51   COMMUNICATION                                                         04/17/2014 15:30:01 PAGE 4   

 177   2         }
 178   1         transmiter_EN = 1;
 179   1         receiver_EN = 0;
 180   1         transmiter_power = 1;            
 181   1      }
 182          
 183          /*--------------------------------------------------
 184             ComMode_2_Data()
 185             when battery is stolen, transmit this code to slave. 
 186          ---------------------------------------------------*/
 187          
 188          void ComMode_2_Data()   
 189          {
 190   1         unsigned char i,n;
 191   1         receiver_EN = 1;
 192   1         transmiter_power = 0;            
 193   1         transmiter_EN = 0;
 194   1         myTxRxData[0]=CmdHead;
 195   1         myTxRxData[1]=MyAddress;
 196   1         myTxRxData[2]=ComMode_2;
 197   1      /* myTxRxData[3]=0x00;
 198   1         myTxRxData[4]=0x00;
 199   1         myTxRxData[5]=0x00;
 200   1         myTxRxData[6]=0x00;
 201   1      */
 202   1         initsignal2();
 203   1      
 204   1         for(i=0;i<3;i++)
 205   1         {
 206   2            for(n=0;n<8;n++)
 207   2            {
 208   3               if((myTxRxData[i]&0x80)==0x80)//Îª1
 209   3               {
 210   4                  P10=0;
 211   4                  Delay4(120);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 212   4               }
 213   3               else//Îª0µÄÇé¿ö
 214   3               {
 215   4                  P10=0;
 216   4                  Delay4(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 217   4               }
 218   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
 219   3               myTxRxData[i]<<=1;
 220   3               Delay4(50);//ÑÓÊ±Òª´óÓÚ2ms
 221   3            }
 222   2         }
 223   1         transmiter_EN = 1;
 224   1         transmiter_power = 1;            
 225   1         receiver_EN = 0;
 226   1      }
 227          
 228          /*----------------------------------------------------------
 229             ComMode_3_Data()
 230             
 231             ±»µÁ±¨¾¯ĞÅºÅ£¬ÈÃ¸½»úÓïÒôÌáÊ¾¡°µç¶¯³µ±»µÁ¡°
 232          ----------------------------------------------------------*/
 233          
 234          void ComMode_3_Data()
 235          {
 236   1      // unsigned int j;
 237   1         unsigned char i,n;
 238   1         receiver_EN = 1;
C51 COMPILER V9.51   COMMUNICATION                                                         04/17/2014 15:30:01 PAGE 5   

 239   1         transmiter_power = 0;
 240   1         transmiter_EN = 0;
 241   1         myTxRxData[0]=CmdHead;
 242   1         myTxRxData[1]=MyAddress;
 243   1         myTxRxData[2]=ComMode_3;
 244   1      /* myTxRxData[3]=0x00;
 245   1         myTxRxData[4]=0x00;
 246   1         myTxRxData[5]=0x00;
 247   1         myTxRxData[6]=0x00;
 248   1      */
 249   1         initsignal();
 250   1      
 251   1         for(i=0;i<3;i++)
 252   1         {
 253   2            for(n=0;n<8;n++)
 254   2            {
 255   3               if((myTxRxData[i]&0x80)==0x80)//Îª1
 256   3               {
 257   4                  P10=0;
 258   4                  Delay4(120);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 259   4               }
 260   3               else//Îª0µÄÇé¿ö
 261   3               {
 262   4                  P10=0;
 263   4                  Delay4(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 264   4               }
 265   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
 266   3               myTxRxData[i]<<=1;
 267   3               Delay4(50);//ÑÓÊ±Òª´óÓÚ2ms
 268   3            }
 269   2         }
 270   1         transmiter_EN = 1;
 271   1         transmiter_power = 1;
 272   1         receiver_EN = 0;
 273   1      }
 274          
 275          /*--------------------------------------------------------
 276             ComMode_4_Data()
 277             
 278             ·¢ĞÅºÅ¸ø¸½»ú£¬ÈÃÆäÓïÒôÌáÊ¾¡°µç¶¯³µ±»Ì§Æğ¡±
 279          ---------------------------------------------------------*/
 280          
 281          void ComMode_4_Data()//·¢ËÍÌ§Æğ±àÂë
 282          {
 283   1         unsigned char i,n;
 284   1         receiver_EN = 1;
 285   1         transmiter_power = 0;
 286   1         transmiter_EN = 0;
 287   1         myTxRxData[0]=CmdHead;
 288   1         myTxRxData[1]=MyAddress;
 289   1         myTxRxData[2]=ComMode_4;
 290   1      /* myTxRxData[3]=0x00;
 291   1         myTxRxData[4]=0x00;
 292   1         myTxRxData[5]=0x00;
 293   1         myTxRxData[6]=0x00;
 294   1      */
 295   1         initsignal3();
 296   1      
 297   1         for(i=0;i<3;i++)
 298   1         {
 299   2            for(n=0;n<8;n++)
 300   2            {
C51 COMPILER V9.51   COMMUNICATION                                                         04/17/2014 15:30:01 PAGE 6   

 301   3               if((myTxRxData[i]&0x80)==0x80)//Îª1
 302   3               {
 303   4                  P10=0;
 304   4                  Delay4(120);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 305   4               }
 306   3               else//Îª0µÄÇé¿ö
 307   3               {
 308   4                  P10=0;
 309   4                  Delay4(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 310   4               }
 311   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
 312   3               myTxRxData[i]<<=1;
 313   3               Delay4(50);//ÑÓÊ±Òª´óÓÚ2ms
 314   3            }
 315   2         }
 316   1         transmiter_EN = 1;
 317   1         transmiter_power = 1;
 318   1         receiver_EN = 0;
 319   1      }
 320          
 321          /*-----------------------------------------------------------
 322             ComMode_5_Data()
 323             
 324             ·¢ĞÅºÅ¸ø¸½»ú£¬ÈÃÆäÓïÒôÌáÊ¾¡°µç¶¯³µµ¹µØÁË¡±
 325          ------------------------------------------------------------*/
 326          
 327          void ComMode_5_Data()//·¢ËÍµ¹µØ±àÂë
 328          {
 329   1         unsigned char i,n;
 330   1         receiver_EN = 1;
 331   1         transmiter_power = 0;//ÇĞ»»Îª300M·¢Éä
 332   1         transmiter_EN = 0;      //´ò¿ªÎŞÏß·¢Éä»ú
 333   1         myTxRxData[0]=CmdHead;
 334   1         myTxRxData[1]=MyAddress;
 335   1         myTxRxData[2]=ComMode_5;
 336   1      /* myTxRxData[3]=0x00;
 337   1         myTxRxData[4]=0x00;
 338   1         myTxRxData[5]=0x00;
 339   1         myTxRxData[6]=0x00;
 340   1      */
 341   1         initsignal3();
 342   1      
 343   1         for(i=0;i<3;i++)
 344   1         {
 345   2            for(n=0;n<8;n++)
 346   2            {
 347   3               if((myTxRxData[i]&0x80)==0x80)//Îª1
 348   3               {
 349   4                  P10=0;
 350   4                  Delay4(120);//ÑÓÊ±4.5msÒÔÉÏ£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 351   4               }
 352   3               else//Îª0µÄÇé¿ö
 353   3               {
 354   4                  P10=0;
 355   4                  Delay4(80);//ÑÓÊ±2ms£¬ÓÉÓÚ¶¨Ê±Æ÷Õ¼ÓÃÎÊÌâ£¬Ö»ÄÜÓÃÕâÖÖÑÓÊ±À´ÊµÏÖ
 356   4               }
 357   3               P10=1;//³£Ì¬Îª¸ßµçÆ½
 358   3               myTxRxData[i]<<=1;
 359   3               Delay4(50);//ÑÓÊ±Òª´óÓÚ2ms
 360   3            }
 361   2         }
 362   1         transmiter_EN = 1;
C51 COMPILER V9.51   COMMUNICATION                                                         04/17/2014 15:30:01 PAGE 7   

 363   1         transmiter_power = 1;
 364   1         receiver_EN = 0;
 365   1      }
 366          
 367          /*-----------------------------------------------------------------------------
 368             receive_byte()
 369             receive a byte program
 370          -----------------------------------------------------------------------------*/
 371          void receive_byte(void)
 372             {
 373   1         // P11 constantly HV, if detected a LV, judge it.
 374   1         if(P11 == 0)
 375   1            {
 376   2            // count the LV time, if more than 12ms, reset it.
 377   2            if(++receive_LV_count == 120)
 378   2               {
 379   3               receive_LV_count = 0;
 380   3               }
 381   2            receive_wire_flag = 0;
 382   2            }
 383   1         // if P11 return to HV
 384   1         else
 385   1            {
 386   2            // and already have LV before, so we think it maybe a bit signal
 387   2            if(receive_wire_flag == 0)
 388   2               {
 389   3               // set the flag, to judge a bit only one time
 390   3               receive_wire_flag = 1;
 391   3      
 392   3               // judge the LV time, if 3.5ms < time < 8ms, we think it is a "0". time<3.5ms means a noise.
 393   3               if((receive_LV_count > 35)&&(receive_LV_count <= 80)) 
 394   3                  {
 395   4                  // save "0" to one byte
 396   4                  one_receive_byte <<= 1;
 397   4                  one_receive_byte &= 0xfe;
 398   4                  one_receive_byte_count++;
 399   4                  receive_HV_count = 0;
 400   4                  }
 401   3               // time > 8ms, means a "1"
 402   3               else if((receive_LV_count > 80))
 403   3                  {
 404   4                  // save "1" to one byte
 405   4                  one_receive_byte <<= 1;
 406   4                  one_receive_byte |= 0x01;
 407   4                  one_receive_byte_count++;
 408   4                  receive_HV_count = 0;
 409   4                  }
 410   3               
 411   3               else
 412   3                  {
 413   4                  // increase the count for HV
 414   4                  receive_HV_count++;  
 415   4                  }
 416   3               // reset LV count
 417   3               receive_LV_count = 0;
 418   3               }
 419   2            else
 420   2               {
 421   3               // judge whether HV count > 6ms, if yes, means a restart
 422   3               if(++receive_HV_count >= 60)
 423   3                  {
 424   4                  one_receive_byte_count = 0;
C51 COMPILER V9.51   COMMUNICATION                                                         04/17/2014 15:30:01 PAGE 8   

 425   4                  receive_wire_flag = 1;
 426   4                  data_count = 0;
 427   4                  }     
 428   3               }
 429   2            }
 430   1         }
 431          
 432          /*-----------------------------------------------------------------------------
 433             receive_word()
 434             receive a word program
 435          -----------------------------------------------------------------------------*/
 436          void receive_word(void)
 437             {
 438   1         // one byte have 8 bit, once receive a bit, the count increase, once it is 8, it means a byte received.
 439   1         if(one_receive_byte_count == 8)
 440   1            {
 441   2            one_receive_byte_count = 0;
 442   2            // assign one byte to buffer[i] 
 443   2            received_data_buffer[data_count] = one_receive_byte;
 444   2            
 445   2            // judge whether buffer[0] is CmdHead
 446   2            if((data_count == 0) && (received_data_buffer[0] == CmdHead))
 447   2               {
 448   3               data_count = 1;
 449   3               }
 450   2            // judge whether buffer[1] is MyAddress
 451   2            else if((data_count == 1) && (received_data_buffer[1] == MyAddress))
 452   2               {
 453   3               data_count = 2;
 454   3               }
 455   2            else if(data_count == 2)
 456   2               {
 457   3               receive_data_finished_flag = 1;
 458   3               data_count = 0;
 459   3               }
 460   2            else 
 461   2               {
 462   3               data_count = 0;
 463   3               }
 464   2            }
 465   1         }
 466             
 467          /*---------------------------------------------------
 468             end of file
 469          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    820    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
